;Copyright © 2000-2014 Future Technology Devices International Limited
; 
; 
; THIS SOFTWARE IS PROVIDED BY FUTURE TECHNOLOGY DEVICES INTERNATIONAL LIMITED ``AS IS'' AND ANY EXPRESS 
; OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL FUTURE TECHNOLOGY DEVICES INTERNATIONAL LIMITED
; BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
; BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
; THE POSSIBILITY OF SUCH DAMAGE.
;


Following are the steps needed to build the DLL/LIB/A on Windows:

1) Install MinGW (GCC) Compiler Suite on Windows. The tested version is GCC 4.8.1
   And/or install Visual Studio 2010.

2) Note that the D2XX driver installed on the machine for the device should match the D2XX library in ..\External\Windows
   The latest version of D2XX driver is available at http://www.ftdichip.com/Drivers/D2XX.htm
   You will need to update the Makefile and/or Visual Studio projects if there is any difference.

3) When using MinGW toolchain, go to folder ...\LibMPSSE\Build\Windows\MinGW and run b.bat.
   This will build the file libMPSSE.dll and libMPSSE.a.
  
   When using Visual Studio toolchain, go to folder ...\LibMPSSE\Build\Windows\VisualStudio, open libMPSSE.sln 
   and build both dynamic (.dll) and static (.lib) for 32-bit Debug, 32-bit Release, 64-bit Debug, 64-bit Release
   

Notes:

1) Note that to disable the debug prints from the DLL, the following lines needs to be commented
   MACROS = -DINFRA_DEBUG_ENABLE
   and the following line needs to be uncommented 
   #MACROS = 

2) Windows
   Note that the ..\Release\samples\XXX\d.bat script builds libMPSSE for both Visual Studio and MinGW
   and then copies the binaries created to ..\Release\lib.
     Visual Studio
       Go to XXX\XXX\ and open the solution for either dynamic or static examples. Build and run. 
     MinGW
       Run b.bat to copy the new libraries (.dll or .a) to XXX\XXX folder before running it.


   
