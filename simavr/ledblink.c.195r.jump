
;; Function uart_putchar (uart_putchar, funcdef_no=7, decl_uid=2025, cgraph_uid=7, symbol_order=11)


7 basic blocks, 8 edges.
basic block 0, loop depth 0, count 0, freq 900, maybe hot
 prev block (nil), next block 2, flags: (RTL)
 pred:      
 succ:       2 [100.0%]  (FALLTHRU)

basic block 2, loop depth 0, count 0, freq 900, maybe hot
 prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
 pred:       ENTRY [100.0%]  (FALLTHRU)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v:QI 46 [ c ])
        (reg:QI 24 r24 [ c ])) ledblink.c:20 71 {movqi_insn}
     (nil))
(insn 3 2 4 2 (set (reg/v/f:HI 47 [ stream ])
        (reg:HI 22 r22 [ stream ])) ledblink.c:20 83 {*movhi}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (cc0)
        (compare (reg/v:QI 46 [ c ])
            (const_int 10 [0xa]))) ledblink.c:21 404 {*cmpqi}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (cc0)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) ledblink.c:21 428 {branch}
     (int_list:REG_BR_PROB 8629 (nil))
 -> 13)
 succ:       3 [13.7%]  (FALLTHRU)
             4 [86.3%] 

basic block 3, loop depth 0, count 0, freq 123, maybe hot
 prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
 pred:       2 [13.7%]  (FALLTHRU)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:HI 22 r22)
        (reg/v/f:HI 47 [ stream ])) ledblink.c:22 83 {*movhi}
     (nil))
(insn 11 10 12 3 (set (reg:QI 24 r24)
        (const_int 13 [0xd])) ledblink.c:22 71 {movqi_insn}
     (nil))
(call_insn 12 11 13 3 (parallel [
            (set (reg:HI 24 r24)
                (call (mem:HI (symbol_ref:HI ("uart_putchar") [flags 0x3]  <function_decl 0x7fce25999af8 uart_putchar>) [0 uart_putchar S2 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
        ]) ledblink.c:22 435 {call_value_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:HI ("uart_putchar") [flags 0x3]  <function_decl 0x7fce25999af8 uart_putchar>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:QI (use (reg:QI 24 r24))
        (expr_list:HI (use (reg:HI 22 r22))
            (nil))))
 succ:       4 [100.0%]  (FALLTHRU)

basic block 4, loop depth 0, count 0, freq 900, maybe hot
 prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
 pred:       3 [100.0%]  (FALLTHRU)
             2 [86.3%] 
(code_label 13 12 14 4 2 "" [1 uses])
(note 14 13 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
 succ:       5 [100.0%]  (FALLTHRU)

basic block 5, loop depth 1, count 0, freq 10000, maybe hot
 prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
 pred:       4 [100.0%]  (FALLTHRU)
             5 [91.0%]  (DFS_BACK)
(code_label 18 14 15 5 3 "" [1 uses])
(note 15 18 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg/f:HI 48)
        (const_int 192 [0xc0])) ledblink.c:23 83 {*movhi}
     (nil))
(insn 17 16 19 5 (set (reg:QI 43 [ D.2072 ])
        (mem/v:QI (reg/f:HI 48) [0 MEM[(volatile uint8_t *)192B]+0 S1 A8])) ledblink.c:23 71 {movqi_insn}
     (nil))
(insn 19 17 20 5 (set (reg:QI 49 [ D.2072 ])
        (and:QI (reg:QI 43 [ D.2072 ])
            (const_int 32 [0x20]))) ledblink.c:23 262 {andqi3}
     (nil))
(insn 20 19 21 5 (set (cc0)
        (compare (reg:QI 49 [ D.2072 ])
            (const_int 0 [0]))) ledblink.c:23 404 {*cmpqi}
     (nil))
(jump_insn 21 20 22 5 (set (pc)
        (if_then_else (eq (cc0)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) ledblink.c:23 428 {branch}
     (int_list:REG_BR_PROB 9100 (nil))
 -> 18)
 succ:       5 [91.0%]  (DFS_BACK)
             6 [9.0%]  (FALLTHRU)

basic block 6, loop depth 0, count 0, freq 900, maybe hot
 prev block 5, next block 1, flags: (NEW, REACHABLE, RTL)
 pred:       5 [9.0%]  (FALLTHRU)
(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 6 (set (reg:QI 44 [ D.2072 ])
        (reg/v:QI 46 [ c ])) ledblink.c:24 71 {movqi_insn}
     (nil))
(insn 24 23 25 6 (set (reg/f:HI 50)
        (const_int 198 [0xc6])) ledblink.c:24 83 {*movhi}
     (nil))
(insn 25 24 26 6 (set (mem/v:QI (reg/f:HI 50) [0 MEM[(volatile uint8_t *)198B]+0 S1 A8])
        (reg:QI 44 [ D.2072 ])) ledblink.c:24 71 {movqi_insn}
     (nil))
(insn 26 25 30 6 (set (reg:HI 45 [ <retval> ])
        (const_int 0 [0])) ledblink.c:25 83 {*movhi}
     (nil))
(insn 30 26 31 6 (set (reg/i:HI 24 r24)
        (reg:HI 45 [ <retval> ])) ledblink.c:26 83 {*movhi}
     (nil))
(insn 31 30 0 6 (use (reg/i:HI 24 r24)) ledblink.c:26 -1
     (nil))
 succ:       EXIT [100.0%]  (FALLTHRU)

basic block 1, loop depth 0, count 0, freq 900, maybe hot
 prev block 6, next block (nil), flags: (REACHABLE, RTL)
 pred:       6 [100.0%]  (FALLTHRU)
 succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v:QI 46 [ c ])
        (reg:QI 24 r24 [ c ])) ledblink.c:20 71 {movqi_insn}
     (nil))
(insn 3 2 4 2 (set (reg/v/f:HI 47 [ stream ])
        (reg:HI 22 r22 [ stream ])) ledblink.c:20 83 {*movhi}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (cc0)
        (compare (reg/v:QI 46 [ c ])
            (const_int 10 [0xa]))) ledblink.c:21 404 {*cmpqi}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (cc0)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) ledblink.c:21 428 {branch}
     (int_list:REG_BR_PROB 8629 (nil))
 -> 13)
;;  succ:       3 [13.7%]  (FALLTHRU)
;;              4 [86.3%] 

;; basic block 3, loop depth 0, count 0, freq 123, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [13.7%]  (FALLTHRU)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:HI 22 r22)
        (reg/v/f:HI 47 [ stream ])) ledblink.c:22 83 {*movhi}
     (nil))
(insn 11 10 12 3 (set (reg:QI 24 r24)
        (const_int 13 [0xd])) ledblink.c:22 71 {movqi_insn}
     (nil))
(call_insn 12 11 13 3 (parallel [
            (set (reg:HI 24 r24)
                (call (mem:HI (symbol_ref:HI ("uart_putchar") [flags 0x3]  <function_decl 0x7fce25999af8 uart_putchar>) [0 uart_putchar S2 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
        ]) ledblink.c:22 435 {call_value_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:HI ("uart_putchar") [flags 0x3]  <function_decl 0x7fce25999af8 uart_putchar>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:QI (use (reg:QI 24 r24))
        (expr_list:HI (use (reg:HI 22 r22))
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [100.0%]  (FALLTHRU)
;;              2 [86.3%] 
(code_label 13 12 14 4 2 "" [1 uses])
(note 14 13 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       5 [100.0%]  (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 10000, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              5 [91.0%]  (DFS_BACK)
(code_label 18 14 15 5 3 "" [1 uses])
(note 15 18 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg/f:HI 48)
        (const_int 192 [0xc0])) ledblink.c:23 83 {*movhi}
     (nil))
(insn 17 16 19 5 (set (reg:QI 43 [ D.2072 ])
        (mem/v:QI (reg/f:HI 48) [0 MEM[(volatile uint8_t *)192B]+0 S1 A8])) ledblink.c:23 71 {movqi_insn}
     (nil))
(insn 19 17 20 5 (set (reg:QI 49 [ D.2072 ])
        (and:QI (reg:QI 43 [ D.2072 ])
            (const_int 32 [0x20]))) ledblink.c:23 262 {andqi3}
     (nil))
(insn 20 19 21 5 (set (cc0)
        (compare (reg:QI 49 [ D.2072 ])
            (const_int 0 [0]))) ledblink.c:23 404 {*cmpqi}
     (nil))
(jump_insn 21 20 22 5 (set (pc)
        (if_then_else (eq (cc0)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) ledblink.c:23 428 {branch}
     (int_list:REG_BR_PROB 9100 (nil))
 -> 18)
;;  succ:       5 [91.0%]  (DFS_BACK)
;;              6 [9.0%]  (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       5 [9.0%]  (FALLTHRU)
(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 6 (set (reg:QI 44 [ D.2072 ])
        (reg/v:QI 46 [ c ])) ledblink.c:24 71 {movqi_insn}
     (nil))
(insn 24 23 25 6 (set (reg/f:HI 50)
        (const_int 198 [0xc6])) ledblink.c:24 83 {*movhi}
     (nil))
(insn 25 24 26 6 (set (mem/v:QI (reg/f:HI 50) [0 MEM[(volatile uint8_t *)198B]+0 S1 A8])
        (reg:QI 44 [ D.2072 ])) ledblink.c:24 71 {movqi_insn}
     (nil))
(insn 26 25 30 6 (set (reg:HI 45 [ <retval> ])
        (const_int 0 [0])) ledblink.c:25 83 {*movhi}
     (nil))
(insn 30 26 31 6 (set (reg/i:HI 24 r24)
        (reg:HI 45 [ <retval> ])) ledblink.c:26 83 {*movhi}
     (nil))
(insn 31 30 0 6 (use (reg/i:HI 24 r24)) ledblink.c:26 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function main (main, funcdef_no=8, decl_uid=2030, cgraph_uid=8, symbol_order=13) (executed once)


8 basic blocks, 9 edges.
basic block 0, loop depth 0, count 0, freq 100, maybe hot
 prev block (nil), next block 2, flags: (RTL)
 pred:      
 succ:       2 [100.0%]  (FALLTHRU)

basic block 2, loop depth 0, count 0, freq 100, maybe hot
 prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
 pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:HI 49)
        (const_int 36 [0x24])) ledblink.c:34 83 {*movhi}
     (nil))
(insn 7 6 8 2 (set (reg:QI 50)
        (const_int -1 [0xffffffffffffffff])) ledblink.c:34 71 {movqi_insn}
     (nil))
(insn 8 7 9 2 (set (mem/v:QI (reg/f:HI 49) [0 MEM[(volatile uint8_t *)36B]+0 S1 A8])
        (reg:QI 50)) ledblink.c:34 71 {movqi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:HI 51)
        (symbol_ref:HI ("__iob") [flags 0x40]  <var_decl 0x7fce25975360 __iob>)) ledblink.c:36 83 {*movhi}
     (nil))
(insn 10 9 11 2 (set (reg:HI 52)
        (symbol_ref:HI ("mystdout") [flags 0x2]  <var_decl 0x7fce25975bd0 mystdout>)) ledblink.c:36 83 {*movhi}
     (nil))
(insn 11 10 12 2 (set (mem/f:HI (plus:HI (reg/f:HI 51)
                (const_int 2 [0x2])) [1 __iob+2 S2 A8])
        (reg:HI 52)) ledblink.c:36 83 {*movhi}
     (nil))
(insn 12 11 13 2 (set (reg:HI 24 r24)
        (symbol_ref/f:HI ("*.LC0") [flags 0x2]  <var_decl 0x7fce259bb6c0 *.LC0>)) ledblink.c:37 83 {*movhi}
     (nil))
(call_insn 13 12 14 2 (parallel [
            (set (reg:HI 24 r24)
                (call (mem:HI (symbol_ref:HI ("puts") [flags 0x41]  <function_decl 0x7fce258a71b0 __builtin_puts>) [0 __builtin_puts S2 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
        ]) ledblink.c:37 435 {call_value_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:HI ("puts") [flags 0x41]  <function_decl 0x7fce258a71b0 __builtin_puts>)
        (nil))
    (expr_list:HI (use (reg:HI 24 r24))
        (nil)))
(insn 14 13 15 2 (set (reg/f:HI 53)
        (const_int 37 [0x25])) ledblink.c:41 83 {*movhi}
     (nil))
(insn 15 14 16 2 (set (reg:QI 54)
        (const_int 1 [0x1])) ledblink.c:41 71 {movqi_insn}
     (nil))
(insn 16 15 17 2 (set (mem/v:QI (reg/f:HI 53) [0 MEM[(volatile uint8_t *)37B]+0 S1 A8])
        (reg:QI 54)) ledblink.c:41 71 {movqi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:HI 24 r24)
        (symbol_ref/f:HI ("*.LC1") [flags 0x2]  <var_decl 0x7fce259bb750 *.LC1>)) ledblink.c:42 83 {*movhi}
     (nil))
(call_insn 18 17 3 2 (parallel [
            (set (reg:HI 24 r24)
                (call (mem:HI (symbol_ref:HI ("puts") [flags 0x41]  <function_decl 0x7fce258a71b0 __builtin_puts>) [0 __builtin_puts S2 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
        ]) ledblink.c:42 435 {call_value_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:HI ("puts") [flags 0x41]  <function_decl 0x7fce258a71b0 __builtin_puts>)
        (nil))
    (expr_list:HI (use (reg:HI 24 r24))
        (nil)))
(insn 3 18 45 2 (set (reg:HI 42 [ D.2081 ])
        (const_int 100 [0x64])) ledblink.c:42 83 {*movhi}
     (nil))
 succ:       3 [100.0%]  (FALLTHRU)

basic block 3, loop depth 1, count 0, freq 9900, maybe hot
 prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
 pred:       6 [99.0%]  (DFS_BACK)
             2 [100.0%]  (FALLTHRU)
(code_label 45 3 19 3 10 "" [1 uses])
(note 19 45 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (set (reg/f:HI 55)
        (const_int 37 [0x25])) ledblink.c:45 83 {*movhi}
     (nil))
(insn 21 20 22 3 (set (reg:QI 43 [ D.2082 ])
        (mem/v:QI (reg/f:HI 55) [0 MEM[(volatile uint8_t *)37B]+0 S1 A8])) ledblink.c:45 71 {movqi_insn}
     (nil))
(insn 22 21 23 3 (set (reg:HI 56 [ D.2083 ])
        (zero_extend:HI (reg:QI 43 [ D.2082 ]))) ledblink.c:45 382 {zero_extendqihi2}
     (nil))
(insn 23 22 24 3 (set (reg:HI 57 [ D.2083 ])
        (ashift:HI (reg:HI 56 [ D.2083 ])
            (const_int 1 [0x1]))) ledblink.c:45 290 {ashlhi3}
     (nil))
(insn 24 23 25 3 (parallel [
            (set (cc0)
                (compare (reg:HI 57 [ D.2083 ])
                    (const_int 0 [0])))
            (clobber (scratch:QI))
        ]) ledblink.c:45 408 {*cmphi}
     (nil))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (ne (cc0)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) ledblink.c:45 428 {branch}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 32)
 succ:       4 [50.0%]  (FALLTHRU)
             5 [50.0%] 

basic block 4, loop depth 1, count 0, freq 4950, maybe hot
 prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
 pred:       3 [50.0%]  (FALLTHRU)
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg/f:HI 58)
        (const_int 37 [0x25])) ledblink.c:46 83 {*movhi}
     (nil))
(insn 28 27 29 4 (set (reg:QI 59)
        (const_int 1 [0x1])) ledblink.c:46 71 {movqi_insn}
     (nil))
(insn 29 28 32 4 (set (mem/v:QI (reg/f:HI 58) [0 MEM[(volatile uint8_t *)37B]+0 S1 A8])
        (reg:QI 59)) ledblink.c:46 71 {movqi_insn}
     (nil))
 succ:       6 [100.0%]  (FALLTHRU)

basic block 5, loop depth 1, count 0, freq 4950, maybe hot
 prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
 pred:       3 [50.0%] 
(code_label 32 29 33 5 8 "" [1 uses])
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg/f:HI 60)
        (const_int 37 [0x25])) ledblink.c:48 83 {*movhi}
     (nil))
(insn 35 34 36 5 (set (reg:QI 46 [ D.2082 ])
        (mem/v:QI (reg/f:HI 60) [0 MEM[(volatile uint8_t *)37B]+0 S1 A8])) ledblink.c:48 71 {movqi_insn}
     (nil))
(insn 36 35 37 5 (set (reg:QI 47 [ D.2082 ])
        (ashift:QI (reg:QI 46 [ D.2082 ])
            (const_int 1 [0x1]))) ledblink.c:48 287 {*ashlqi3}
     (nil))
(insn 37 36 38 5 (set (reg/f:HI 61)
        (const_int 37 [0x25])) ledblink.c:48 83 {*movhi}
     (nil))
(insn 38 37 39 5 (set (mem/v:QI (reg/f:HI 61) [0 MEM[(volatile uint8_t *)37B]+0 S1 A8])
        (reg:QI 47 [ D.2082 ])) ledblink.c:48 71 {movqi_insn}
     (nil))
 succ:       6 [100.0%]  (FALLTHRU)

basic block 6, loop depth 1, count 0, freq 9900, maybe hot
 prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
 pred:       4 [100.0%]  (FALLTHRU)
             5 [100.0%]  (FALLTHRU)
(code_label 39 38 40 6 9 "" [0 uses])
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (parallel [
            (unspec_volatile [
                    (const_int 1599999 [0x1869ff])
                    (const_int 3 [0x3])
                ] UNSPECV_DELAY_CYCLES)
            (set (mem/v:BLK (scratch:HI) [0  A8])
                (unspec_volatile:BLK [
                        (mem/v:BLK (scratch:HI) [0  A8])
                    ] UNSPECV_MEMORY_BARRIER))
            (clobber (scratch:QI))
            (clobber (scratch:QI))
            (clobber (scratch:QI))
        ]) /usr/lib/avr/include/util/delay.h:187 459 {delay_cycles_3}
     (nil))
(insn 42 41 43 6 (parallel [
            (unspec_volatile [
                    (const_int 2 [0x2])
                ] UNSPECV_NOP)
            (set (mem/v:BLK (scratch:HI) [0  A8])
                (unspec_volatile:BLK [
                        (mem/v:BLK (scratch:HI) [0  A8])
                    ] UNSPECV_MEMORY_BARRIER))
        ]) /usr/lib/avr/include/util/delay.h:187 480 {*nopv}
     (nil))
(insn 43 42 44 6 (parallel [
            (unspec_volatile [
                    (const_int 1 [0x1])
                ] UNSPECV_NOP)
            (set (mem/v:BLK (scratch:HI) [0  A8])
                (unspec_volatile:BLK [
                        (mem/v:BLK (scratch:HI) [0  A8])
                    ] UNSPECV_MEMORY_BARRIER))
        ]) /usr/lib/avr/include/util/delay.h:187 480 {*nopv}
     (nil))
(insn 44 43 46 6 (parallel [
            (set (reg:HI 42 [ D.2081 ])
                (plus:HI (reg:HI 42 [ D.2081 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (scratch:QI))
        ]) 121 {addhi3_clobber}
     (nil))
(insn 46 44 47 6 (parallel [
            (set (cc0)
                (compare (reg:HI 42 [ D.2081 ])
                    (const_int 0 [0])))
            (clobber (scratch:QI))
        ]) ledblink.c:43 408 {*cmphi}
     (nil))
(jump_insn 47 46 48 6 (set (pc)
        (if_then_else (ne (cc0)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) ledblink.c:43 428 {branch}
     (int_list:REG_BR_PROB 9899 (nil))
 -> 45)
 succ:       3 [99.0%]  (DFS_BACK)
             7 [1.0%]  (FALLTHRU)

basic block 7, loop depth 0, count 0, freq 100, maybe hot
 prev block 6, next block 1, flags: (NEW, REACHABLE, RTL)
 pred:       6 [1.0%]  (FALLTHRU)
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 7 (asm_operands/v ("sleep
	") ("") 0 []
         []
         [] ledblink.c:54) ledblink.c:54 -1
     (nil))
(insn 50 49 54 7 (set (reg:HI 48 [ <retval> ])
        (const_int 0 [0])) <built-in>:0 83 {*movhi}
     (nil))
(insn 54 50 55 7 (set (reg/i:HI 24 r24)
        (reg:HI 48 [ <retval> ])) ledblink.c:55 83 {*movhi}
     (nil))
(insn 55 54 0 7 (use (reg/i:HI 24 r24)) ledblink.c:55 -1
     (nil))
 succ:       EXIT [100.0%]  (FALLTHRU)

basic block 1, loop depth 0, count 0, freq 100, maybe hot
 prev block 7, next block (nil), flags: (REACHABLE, RTL)
 pred:       7 [100.0%]  (FALLTHRU)
 succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, count 0, freq 100, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:HI 49)
        (const_int 36 [0x24])) ledblink.c:34 83 {*movhi}
     (nil))
(insn 7 6 8 2 (set (reg:QI 50)
        (const_int -1 [0xffffffffffffffff])) ledblink.c:34 71 {movqi_insn}
     (nil))
(insn 8 7 9 2 (set (mem/v:QI (reg/f:HI 49) [0 MEM[(volatile uint8_t *)36B]+0 S1 A8])
        (reg:QI 50)) ledblink.c:34 71 {movqi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:HI 51)
        (symbol_ref:HI ("__iob") [flags 0x40]  <var_decl 0x7fce25975360 __iob>)) ledblink.c:36 83 {*movhi}
     (nil))
(insn 10 9 11 2 (set (reg:HI 52)
        (symbol_ref:HI ("mystdout") [flags 0x2]  <var_decl 0x7fce25975bd0 mystdout>)) ledblink.c:36 83 {*movhi}
     (nil))
(insn 11 10 12 2 (set (mem/f:HI (plus:HI (reg/f:HI 51)
                (const_int 2 [0x2])) [1 __iob+2 S2 A8])
        (reg:HI 52)) ledblink.c:36 83 {*movhi}
     (nil))
(insn 12 11 13 2 (set (reg:HI 24 r24)
        (symbol_ref/f:HI ("*.LC0") [flags 0x2]  <var_decl 0x7fce259bb6c0 *.LC0>)) ledblink.c:37 83 {*movhi}
     (nil))
(call_insn 13 12 14 2 (parallel [
            (set (reg:HI 24 r24)
                (call (mem:HI (symbol_ref:HI ("puts") [flags 0x41]  <function_decl 0x7fce258a71b0 __builtin_puts>) [0 __builtin_puts S2 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
        ]) ledblink.c:37 435 {call_value_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:HI ("puts") [flags 0x41]  <function_decl 0x7fce258a71b0 __builtin_puts>)
        (nil))
    (expr_list:HI (use (reg:HI 24 r24))
        (nil)))
(insn 14 13 15 2 (set (reg/f:HI 53)
        (const_int 37 [0x25])) ledblink.c:41 83 {*movhi}
     (nil))
(insn 15 14 16 2 (set (reg:QI 54)
        (const_int 1 [0x1])) ledblink.c:41 71 {movqi_insn}
     (nil))
(insn 16 15 17 2 (set (mem/v:QI (reg/f:HI 53) [0 MEM[(volatile uint8_t *)37B]+0 S1 A8])
        (reg:QI 54)) ledblink.c:41 71 {movqi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:HI 24 r24)
        (symbol_ref/f:HI ("*.LC1") [flags 0x2]  <var_decl 0x7fce259bb750 *.LC1>)) ledblink.c:42 83 {*movhi}
     (nil))
(call_insn 18 17 3 2 (parallel [
            (set (reg:HI 24 r24)
                (call (mem:HI (symbol_ref:HI ("puts") [flags 0x41]  <function_decl 0x7fce258a71b0 __builtin_puts>) [0 __builtin_puts S2 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
        ]) ledblink.c:42 435 {call_value_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:HI ("puts") [flags 0x41]  <function_decl 0x7fce258a71b0 __builtin_puts>)
        (nil))
    (expr_list:HI (use (reg:HI 24 r24))
        (nil)))
(insn 3 18 45 2 (set (reg:HI 42 [ D.2081 ])
        (const_int 100 [0x64])) ledblink.c:42 83 {*movhi}
     (nil))
;;  succ:       3 [100.0%]  (FALLTHRU)

;; basic block 3, loop depth 1, count 0, freq 9900, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       6 [99.0%]  (DFS_BACK)
;;              2 [100.0%]  (FALLTHRU)
(code_label 45 3 19 3 10 "" [1 uses])
(note 19 45 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (set (reg/f:HI 55)
        (const_int 37 [0x25])) ledblink.c:45 83 {*movhi}
     (nil))
(insn 21 20 22 3 (set (reg:QI 43 [ D.2082 ])
        (mem/v:QI (reg/f:HI 55) [0 MEM[(volatile uint8_t *)37B]+0 S1 A8])) ledblink.c:45 71 {movqi_insn}
     (nil))
(insn 22 21 23 3 (set (reg:HI 56 [ D.2083 ])
        (zero_extend:HI (reg:QI 43 [ D.2082 ]))) ledblink.c:45 382 {zero_extendqihi2}
     (nil))
(insn 23 22 24 3 (set (reg:HI 57 [ D.2083 ])
        (ashift:HI (reg:HI 56 [ D.2083 ])
            (const_int 1 [0x1]))) ledblink.c:45 290 {ashlhi3}
     (nil))
(insn 24 23 25 3 (parallel [
            (set (cc0)
                (compare (reg:HI 57 [ D.2083 ])
                    (const_int 0 [0])))
            (clobber (scratch:QI))
        ]) ledblink.c:45 408 {*cmphi}
     (nil))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (ne (cc0)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) ledblink.c:45 428 {branch}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 32)
;;  succ:       4 [50.0%]  (FALLTHRU)
;;              5 [50.0%] 

;; basic block 4, loop depth 1, count 0, freq 4950, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [50.0%]  (FALLTHRU)
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg/f:HI 58)
        (const_int 37 [0x25])) ledblink.c:46 83 {*movhi}
     (nil))
(insn 28 27 29 4 (set (reg:QI 59)
        (const_int 1 [0x1])) ledblink.c:46 71 {movqi_insn}
     (nil))
(insn 29 28 32 4 (set (mem/v:QI (reg/f:HI 58) [0 MEM[(volatile uint8_t *)37B]+0 S1 A8])
        (reg:QI 59)) ledblink.c:46 71 {movqi_insn}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 4950, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3 [50.0%] 
(code_label 32 29 33 5 8 "" [1 uses])
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg/f:HI 60)
        (const_int 37 [0x25])) ledblink.c:48 83 {*movhi}
     (nil))
(insn 35 34 36 5 (set (reg:QI 46 [ D.2082 ])
        (mem/v:QI (reg/f:HI 60) [0 MEM[(volatile uint8_t *)37B]+0 S1 A8])) ledblink.c:48 71 {movqi_insn}
     (nil))
(insn 36 35 37 5 (set (reg:QI 47 [ D.2082 ])
        (ashift:QI (reg:QI 46 [ D.2082 ])
            (const_int 1 [0x1]))) ledblink.c:48 287 {*ashlqi3}
     (nil))
(insn 37 36 38 5 (set (reg/f:HI 61)
        (const_int 37 [0x25])) ledblink.c:48 83 {*movhi}
     (nil))
(insn 38 37 39 5 (set (mem/v:QI (reg/f:HI 61) [0 MEM[(volatile uint8_t *)37B]+0 S1 A8])
        (reg:QI 47 [ D.2082 ])) ledblink.c:48 71 {movqi_insn}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)

;; basic block 6, loop depth 1, count 0, freq 9900, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              5 [100.0%]  (FALLTHRU)
(code_label 39 38 40 6 9 "" [0 uses])
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (parallel [
            (unspec_volatile [
                    (const_int 1599999 [0x1869ff])
                    (const_int 3 [0x3])
                ] UNSPECV_DELAY_CYCLES)
            (set (mem/v:BLK (scratch:HI) [0  A8])
                (unspec_volatile:BLK [
                        (mem/v:BLK (scratch:HI) [0  A8])
                    ] UNSPECV_MEMORY_BARRIER))
            (clobber (scratch:QI))
            (clobber (scratch:QI))
            (clobber (scratch:QI))
        ]) /usr/lib/avr/include/util/delay.h:187 459 {delay_cycles_3}
     (nil))
(insn 42 41 43 6 (parallel [
            (unspec_volatile [
                    (const_int 2 [0x2])
                ] UNSPECV_NOP)
            (set (mem/v:BLK (scratch:HI) [0  A8])
                (unspec_volatile:BLK [
                        (mem/v:BLK (scratch:HI) [0  A8])
                    ] UNSPECV_MEMORY_BARRIER))
        ]) /usr/lib/avr/include/util/delay.h:187 480 {*nopv}
     (nil))
(insn 43 42 44 6 (parallel [
            (unspec_volatile [
                    (const_int 1 [0x1])
                ] UNSPECV_NOP)
            (set (mem/v:BLK (scratch:HI) [0  A8])
                (unspec_volatile:BLK [
                        (mem/v:BLK (scratch:HI) [0  A8])
                    ] UNSPECV_MEMORY_BARRIER))
        ]) /usr/lib/avr/include/util/delay.h:187 480 {*nopv}
     (nil))
(insn 44 43 46 6 (parallel [
            (set (reg:HI 42 [ D.2081 ])
                (plus:HI (reg:HI 42 [ D.2081 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (scratch:QI))
        ]) 121 {addhi3_clobber}
     (nil))
(insn 46 44 47 6 (parallel [
            (set (cc0)
                (compare (reg:HI 42 [ D.2081 ])
                    (const_int 0 [0])))
            (clobber (scratch:QI))
        ]) ledblink.c:43 408 {*cmphi}
     (nil))
(jump_insn 47 46 48 6 (set (pc)
        (if_then_else (ne (cc0)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) ledblink.c:43 428 {branch}
     (int_list:REG_BR_PROB 9899 (nil))
 -> 45)
;;  succ:       3 [99.0%]  (DFS_BACK)
;;              7 [1.0%]  (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 100, maybe hot
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       6 [1.0%]  (FALLTHRU)
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 7 (asm_operands/v ("sleep
	") ("") 0 []
         []
         [] ledblink.c:54) ledblink.c:54 -1
     (nil))
(insn 50 49 54 7 (set (reg:HI 48 [ <retval> ])
        (const_int 0 [0])) <built-in>:0 83 {*movhi}
     (nil))
(insn 54 50 55 7 (set (reg/i:HI 24 r24)
        (reg:HI 48 [ <retval> ])) ledblink.c:55 83 {*movhi}
     (nil))
(insn 55 54 0 7 (use (reg/i:HI 24 r24)) ledblink.c:55 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

